from nanopore_10x_multiome.utils import RC

BASE_SEQ = (
    "TGTACTTCGTTCAGTTACGTACTGTCTCGTGGGCTCGGATGTTTCATTTGCCAACAGAATACATAGATT"
    "TTAAAGAATTTTTATTTACTTCCCAGAGTTCTTTTAGGATTAAGTGAAATCACACATGTAAAGTGAAGC"
    "GCAGACAAGACACTGAATACCACGGTCTTCACGTTTGATGACTATATTCAAACCCTTTACACATTTGAG"
    "GCTCAGACAAGATCAATTTCCCAGGAAGTTTCCCTGATTGGCTGATTTTTCCATTTTTCCTGAATTTCT"
    "TCTTTCAGTCTGTCTCTTATAATTTAATAAGGAATTATGTGCTGTGTTAATTGTATTACTCTTATCTCA"
    "ATTTTGTTTCAGGTTAGAGCCTCAGAATCACCACTTTGTGTAAAATACAAGGCAAATACTATTTGAACA"
    "TTTAGATTGATTATGATATTTATGACAGTGTCAGGCAGGAAAATAAGTTTATTGAGCCACAAAATAGTT"
    "TGTTATCATATACAACAATAATAGTTATTGTGCTCTTTACTACATTAATGCAATTAACCCTCAGAACAG"
    "TGAAATGTTTTTATTGTCTTCATTTTGCAGGTTTAAAAAAATTGAAGCCTGATTATATAAAGTAACTTG"
    "GTTTACAAAGTTAGTAACTGAGAGATCCAGGATTATGATCCAGACCAGTTTGACCCCAAAGCCCATGCA"
    "CCCATGCAATAATGATGTTTCATTTGCCAACAAGGAAATTAATGAAAATGAACAAAGAATGGATCAGAT"
    "TAAGTTATCATCATGACAGGAAAAAGAAAATATATATGCAGTGATGATTTACTCATATCATCTTGGTAG"
    "GAGAGAATAGAATTACAAGAATTATACATGCGGAAGTCACTAATGTAAAACCAGAACGTCTGAAAAGCA"
    "AAGTAACATTAAATTATATAAGCACATCAGAAAATTTGAGAATTTCTGTCCTAGATGCTTGCTCATTCA"
    "TTAATCTGATCCCTCACTGTGACAGTGTGAACACAGCAGTGAGCAAAAAGAGCATCTTTGCATTTGTGG"
    "AACTTGGAAGAGACACATCAATCAAAGTATTACTTTAAATGATGTTTAATTTCATACTAAGTGCTCTGA"
    "TAAAAAGTCACAGCTCCATGTAAGCAAAAAGCAAACAAACAAAAACAAAATAAACCATCCCAGCTAGGA"
    "GTTCAAGGAAGGCATCCACGAGGGAAGTGAAGCTGAGACGAGATATCATGGCTGAGTTAGGTATGGCAT"
    "CCAAAGACAGTGGAGGTGAGGAGTATCTAAAGCAGCAGGAAGTGAGAAAGGTAACAGAAAGTGTTTGAA"
)


def create_sequence(
    *args,
    rc=False
):
    
    if len(args) % 2 != 0:
        raise ValueError("Arguments are paired seq, location")
    
    n = int(len(args) / 2)
    _offset = 0

    w_bc = BASE_SEQ

    for i in range(n):
        seq, loc = args[2 * i], args[2 * i + 1]

        if seq is None:
            continue

        w_bc = w_bc[0:_offset + loc] + seq + w_bc[_offset + loc:]
        _offset = _offset + loc + len(seq)

    if rc:
        w_bc = RC(w_bc)

    return w_bc


def create_qual(
    total_len,
    barcode_seq_loc,
    bc_len,
    bc_len_2=None,
    rev=False
):
    
    qual = "I" * barcode_seq_loc
    qual = qual + "A" * bc_len

    if bc_len_2 is not None:
        qual = qual + "B" * bc_len_2
        bc_len = bc_len + bc_len_2

    qual = qual + "I" * (total_len - barcode_seq_loc + bc_len)

    if rev:
        qual = qual[::-1]

    return qual
